pipeline
{
    agent any

    tools {
    	maven 'maven' //Tool for testing --> Java
    	msbuild 'MSBuild' //Tool for testing --> C#
        }

        stages {
                stage('Clone Main Repository') {
                    steps {
                        git url: 'https://github.com/CormSquare/GePS', branch: 'master' // Clone the main repository
                    }
                }

        stage('Build C# Project') {
                    steps {
                        script {
                             bat 'msbuild /p:Configuration=Release' // Build the C# project using MSBuild
                                }
                             }
                            post {
                                success {
                                    archiveArtifacts artifacts: '**/bin/Release/*.exe', allowEmptyArchive: true // Archive the build artifacts
                                }
                            }
                        }

        stage('Deploy to Test Environment') {
                   steps {
                       echo "Deploy to QA" // Print a message to the console
                       bat './deploy_to_qa.sh' // Run a shell script to deploy to the test environment -> Use 'sh' for Unix/Linux
                          }
                       }

        stage('Clone Playwright Automation Project') {
                     steps {
                         git url: 'https://github.com/Issac1809/PlayWright', branch: 'master' // Clone the Java automation project
                           }
                        }

        stage('Build Playwright Automation Project') {
              steps {
                  sh 'mvn clean package' // Build the Java project using Maven
                     }
                     post {
                           success {
                            archiveArtifacts artifacts: 'target/*.jar', allowEmptyArchive: true // Archive the built JAR files
                            }
                         }
                      }

        stage('Regression Automation Test') {
            steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                    sh "mvn clean test -Dsurefire.suiteXmlFiles=src/test/resources/testrunners/testng_functional.xml"
                }
            }
        }

        stage('Publish Extent Report'){
            steps {
                publishHTML([allowMissing: false,
                             alwaysLinkToLastBuild: false,
                             keepAll: true,
                             reportDir: 'build',
                             reportFiles: 'buildTestExecutionReport.html',
                             reportName: 'HTML Extent Report',
                             reportTitles: ''])
            }
        }
    }
}